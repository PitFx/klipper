[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0 #Put your serial id
restart_method: command

[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 64
rotation_distance: 64
endstop_pin: ^PA5
position_endstop: 0
position_max: 252
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: !PB7
enable_pin: !PC3
microsteps: 64
rotation_distance: 64
endstop_pin: ^PA6
position_endstop: 252
position_max: 252
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
#position_endstop: 0.0                  # disable to use BLTouch
#endstop_pin: ^PA7                      # disable to use BLTouch
endstop_pin: probe:z_virtual_endstop    # enable to use BLTouch 
position_min: -1                        # enable to use BLTouch
position_max: 302

[safe_z_home]                           # enable for BLTouch
home_xy_position: 94.5, 102.5
speed: 50
z_hop: 10
z_hop_speed: 5

[bltouch]                               # enable for BLTouch
sensor_pin: ^PB1
control_pin: PB0
x_offset: 35.5
y_offset: 28.5
z_offset = 2.965      # 2.965 OK for 3D Touch
speed: 5
samples: 2
sample_retract_dist: 5.0              # Can be set lower, example 2.5 depending on height of bltouch from bed
lift_speed: 50
samples_tolerance_retries: 2

[bed_mesh]                              # enable for BLTouch
speed: 100
horizontal_move_z: 5
mesh_min: 35.5, 37.5
mesh_max: 224.5, 226.5
algorithm: bicubic
probe_count: 5, 5

[extruder]
max_extrude_only_distance: 1000.0
step_pin: PB4
dir_pin: !PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 22.624 # from calibration 22.624
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
control = pid
pid_kp = 19.432
pid_ki = 0.900
pid_kd = 104.932
min_temp: 0
max_temp: 260
min_extrude_temp: 175
#pressure_advance = 1.100 #from my tower but lower 0.875 then real
#pressure_advance_smooth_time: 0.040
max_extrude_only_velocity: 60
max_extrude_only_accel: 500

#[input_shaper]
#shaper_freq_x: 48.0000  # frequency for the X mark of the test model
#shaper_freq_y: 69.0000  # frequency for the Y mark of the test model
#shaper_type: ei

[heater_bed]
heater_pin: PA15
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control = pid
pid_kp = 75.502
pid_ki = 1.535
pid_kd = 928.677
min_temp: 0
max_temp: 100

[bed_screws]
speed: 100
horizontal_move_z: 5
screw1: 35, 35
screw2: 225, 35
screw3: 225, 225
screw4: 35, 225

[screws_tilt_adjust]
screw1: 0.5, 8.5
screw1_name: front left screw
screw2: 189.5, 8.5
screw2_name: front right screw
screw3: 189.5, 199.5
screw3_name: rear right screw
screw4: 0.5, 199.5
screw4_name: rear left screw
horizontal_move_z: 5
speed: 100
screw_thread: CW-M4

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 2000
max_z_velocity: 10
max_z_accel: 100
square_corner_velocity: 5.0

[filament_switch_sensor filament_sensor]
pause_on_runout: true
switch_pin: !PA4

[fan]
pin: PA0
kick_start_time: 0.100

[virtual_sdcard]
path: ~/gcode_files

# Support Arc Welder
[gcode_arcs]
#resolution: 1.0

[display_status]

[pause_resume]

[include timelapse.cfg]

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE


# This file contains pin mappings for the stock 2021 Creality Ender 7.
# To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.
# [include mainsail.cfg]

# =========================================
# Please calibrate your pressure advance and rotation distance following klipper's guide
# https://www.klipper3d.org/Pressure_Advance.html
# https://www.klipper3d.org/Rotation_Distance.html

# GUIDE TO CALCULATE rotation_distance
# step_distance = 1/steps_per_mm (140)
# Take your measured filament length out of 100mm. In this example we are using 105mm.
# Divide this number by 100. The result is 1.05
# Multiply this number by the step_distance number. For this example, we will be using 0.00180180. The result is 0.00189189
# This is your new step_distance value

# rotation_distance = <full_steps_per_rotation> * <microsteps> * <step_distance>
# Typical full_steps_per_rotation = 200, microsteps = 16

# rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / <requested_extrude_distance>
# =========================================

#From another cfg
# Compile Firmware with:
# -------------------------------
# Enable extra low-level configuration options
# STM32 => STM32F103
# Bootloader offset 28KiB
# Clock Reference 8MHz
# Communication interface USART1 PA10/PA9 for using USB
# Pins set on startup: !PA15,!PA1,!PA0,PC3
# -------------------------------

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.032500, -0.025000, 0.001250, -0.020000, -0.026250
#*# 	  0.003750, -0.020000, -0.015000, -0.055000, -0.058750
#*# 	  0.037500, 0.012500, 0.007500, -0.032500, -0.035000
#*# 	  0.047500, 0.027500, 0.026250, -0.007500, -0.002500
#*# 	  -0.001250, -0.013750, 0.011250, -0.010000, -0.020000
#*# tension = 0.2
#*# min_x = 35.5
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 37.5
#*# x_count = 5
#*# max_y = 226.5
#*# mesh_x_pps = 2
#*# max_x = 224.5
#*#
#*# [bed_mesh Glass 5x5 65st 0.1062]
#*# version = 1
#*# points =
#*# 	  -0.032500, -0.025000, 0.001250, -0.020000, -0.026250
#*# 	  0.003750, -0.020000, -0.015000, -0.055000, -0.058750
#*# 	  0.037500, 0.012500, 0.007500, -0.032500, -0.035000
#*# 	  0.047500, 0.027500, 0.026250, -0.007500, -0.002500
#*# 	  -0.001250, -0.013750, 0.011250, -0.010000, -0.020000
#*# tension = 0.2
#*# min_x = 35.5
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 37.5
#*# x_count = 5
#*# max_y = 226.5
#*# mesh_x_pps = 2
#*# max_x = 224.5
